// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "epiforecast.cpp14funs_types.hpp"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// CartesianProductCurves
std::vector<Rcpp::DataFrame> CartesianProductCurves(Rcpp::List fit_obj_rcpp, Mean y_scale_baseline, std::vector<std::ptrdiff_t> curve_index_choices, std::vector<Time> peak_time_choices, std::vector<Time> x_shift_choices, std::vector<Time> x_scale_choices, std::vector<SD> sd_choices, std::vector<Rp> sd_scale_choices, std::vector<Mean> peak_height_choices, std::vector<Rp> y_scale_choices);
RcppExport SEXP _epiforecast_cpp14funs_CartesianProductCurves(SEXP fit_obj_rcppSEXP, SEXP y_scale_baselineSEXP, SEXP curve_index_choicesSEXP, SEXP peak_time_choicesSEXP, SEXP x_shift_choicesSEXP, SEXP x_scale_choicesSEXP, SEXP sd_choicesSEXP, SEXP sd_scale_choicesSEXP, SEXP peak_height_choicesSEXP, SEXP y_scale_choicesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type fit_obj_rcpp(fit_obj_rcppSEXP);
    Rcpp::traits::input_parameter< Mean >::type y_scale_baseline(y_scale_baselineSEXP);
    Rcpp::traits::input_parameter< std::vector<std::ptrdiff_t> >::type curve_index_choices(curve_index_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Time> >::type peak_time_choices(peak_time_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Time> >::type x_shift_choices(x_shift_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Time> >::type x_scale_choices(x_scale_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<SD> >::type sd_choices(sd_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Rp> >::type sd_scale_choices(sd_scale_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Mean> >::type peak_height_choices(peak_height_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Rp> >::type y_scale_choices(y_scale_choicesSEXP);
    rcpp_result_gen = Rcpp::wrap(CartesianProductCurves(fit_obj_rcpp, y_scale_baseline, curve_index_choices, peak_time_choices, x_shift_choices, x_scale_choices, sd_choices, sd_scale_choices, peak_height_choices, y_scale_choices));
    return rcpp_result_gen;
END_RCPP
}
// CartesianProductLogWeights
Rcpp::NumericVector CartesianProductLogWeights(Rcpp::DataFrame new_dat_df, Rcpp::List dat_rcpp, Rcpp::DataFrame observed_past_shrinkage_map_df, Rcpp::DataFrame reasonable_future_shrinkage_map_df, std::size_t n_future_neighbors, Rcpp::List fit_obj_rcpp, Mean y_scale_baseline, std::vector<std::ptrdiff_t> curve_index_choices, std::vector<Time> peak_time_choices, std::vector<Time> x_shift_choices, std::vector<Time> x_scale_choices, std::vector<SD> sd_choices, std::vector<Rp> sd_scale_choices, std::vector<Mean> peak_height_choices, std::vector<Rp> y_scale_choices, Time bias_peaktime_mean, Time bias_peaktime_sd, Rp bias_peaktime_shrinkage, Mean bias_peakheight_mean, SD bias_peakheight_sd, Rp bias_peakheight_shrinkage);
RcppExport SEXP _epiforecast_cpp14funs_CartesianProductLogWeights(SEXP new_dat_dfSEXP, SEXP dat_rcppSEXP, SEXP observed_past_shrinkage_map_dfSEXP, SEXP reasonable_future_shrinkage_map_dfSEXP, SEXP n_future_neighborsSEXP, SEXP fit_obj_rcppSEXP, SEXP y_scale_baselineSEXP, SEXP curve_index_choicesSEXP, SEXP peak_time_choicesSEXP, SEXP x_shift_choicesSEXP, SEXP x_scale_choicesSEXP, SEXP sd_choicesSEXP, SEXP sd_scale_choicesSEXP, SEXP peak_height_choicesSEXP, SEXP y_scale_choicesSEXP, SEXP bias_peaktime_meanSEXP, SEXP bias_peaktime_sdSEXP, SEXP bias_peaktime_shrinkageSEXP, SEXP bias_peakheight_meanSEXP, SEXP bias_peakheight_sdSEXP, SEXP bias_peakheight_shrinkageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type new_dat_df(new_dat_dfSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type dat_rcpp(dat_rcppSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type observed_past_shrinkage_map_df(observed_past_shrinkage_map_dfSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type reasonable_future_shrinkage_map_df(reasonable_future_shrinkage_map_dfSEXP);
    Rcpp::traits::input_parameter< std::size_t >::type n_future_neighbors(n_future_neighborsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type fit_obj_rcpp(fit_obj_rcppSEXP);
    Rcpp::traits::input_parameter< Mean >::type y_scale_baseline(y_scale_baselineSEXP);
    Rcpp::traits::input_parameter< std::vector<std::ptrdiff_t> >::type curve_index_choices(curve_index_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Time> >::type peak_time_choices(peak_time_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Time> >::type x_shift_choices(x_shift_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Time> >::type x_scale_choices(x_scale_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<SD> >::type sd_choices(sd_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Rp> >::type sd_scale_choices(sd_scale_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Mean> >::type peak_height_choices(peak_height_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Rp> >::type y_scale_choices(y_scale_choicesSEXP);
    Rcpp::traits::input_parameter< Time >::type bias_peaktime_mean(bias_peaktime_meanSEXP);
    Rcpp::traits::input_parameter< Time >::type bias_peaktime_sd(bias_peaktime_sdSEXP);
    Rcpp::traits::input_parameter< Rp >::type bias_peaktime_shrinkage(bias_peaktime_shrinkageSEXP);
    Rcpp::traits::input_parameter< Mean >::type bias_peakheight_mean(bias_peakheight_meanSEXP);
    Rcpp::traits::input_parameter< SD >::type bias_peakheight_sd(bias_peakheight_sdSEXP);
    Rcpp::traits::input_parameter< Rp >::type bias_peakheight_shrinkage(bias_peakheight_shrinkageSEXP);
    rcpp_result_gen = Rcpp::wrap(CartesianProductLogWeights(new_dat_df, dat_rcpp, observed_past_shrinkage_map_df, reasonable_future_shrinkage_map_df, n_future_neighbors, fit_obj_rcpp, y_scale_baseline, curve_index_choices, peak_time_choices, x_shift_choices, x_scale_choices, sd_choices, sd_scale_choices, peak_height_choices, y_scale_choices, bias_peaktime_mean, bias_peaktime_sd, bias_peaktime_shrinkage, bias_peakheight_mean, bias_peakheight_sd, bias_peakheight_shrinkage));
    return rcpp_result_gen;
END_RCPP
}
// ZipProductCurvesAndLogWeightsp
SEXP ZipProductCurvesAndLogWeightsp(std::vector<Time> output_times, Rcpp::DataFrame new_dat_df, Rcpp::List dat_rcpp, Rcpp::DataFrame observed_past_shrinkage_map_df, Rcpp::DataFrame reasonable_future_shrinkage_map_df, std::size_t n_future_neighbors, Rcpp::List fit_obj_rcpp, Mean y_scale_baseline, std::vector<std::ptrdiff_t> curve_index_choices, std::vector<Time> peak_time_choices, std::vector<Time> x_shift_choices, std::vector<Time> x_scale_choices, std::vector<SD> sd_choices, std::vector<Rp> sd_scale_choices, std::vector<Mean> peak_height_choices, std::vector<Rp> y_scale_choices, Time bias_peaktime_mean, Time bias_peaktime_sd, Rp bias_peaktime_shrinkage, Mean bias_peakheight_mean, SD bias_peakheight_sd, Rp bias_peakheight_shrinkage);
RcppExport SEXP _epiforecast_cpp14funs_ZipProductCurvesAndLogWeightsp(SEXP output_timesSEXP, SEXP new_dat_dfSEXP, SEXP dat_rcppSEXP, SEXP observed_past_shrinkage_map_dfSEXP, SEXP reasonable_future_shrinkage_map_dfSEXP, SEXP n_future_neighborsSEXP, SEXP fit_obj_rcppSEXP, SEXP y_scale_baselineSEXP, SEXP curve_index_choicesSEXP, SEXP peak_time_choicesSEXP, SEXP x_shift_choicesSEXP, SEXP x_scale_choicesSEXP, SEXP sd_choicesSEXP, SEXP sd_scale_choicesSEXP, SEXP peak_height_choicesSEXP, SEXP y_scale_choicesSEXP, SEXP bias_peaktime_meanSEXP, SEXP bias_peaktime_sdSEXP, SEXP bias_peaktime_shrinkageSEXP, SEXP bias_peakheight_meanSEXP, SEXP bias_peakheight_sdSEXP, SEXP bias_peakheight_shrinkageSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<Time> >::type output_times(output_timesSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type new_dat_df(new_dat_dfSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type dat_rcpp(dat_rcppSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type observed_past_shrinkage_map_df(observed_past_shrinkage_map_dfSEXP);
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type reasonable_future_shrinkage_map_df(reasonable_future_shrinkage_map_dfSEXP);
    Rcpp::traits::input_parameter< std::size_t >::type n_future_neighbors(n_future_neighborsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type fit_obj_rcpp(fit_obj_rcppSEXP);
    Rcpp::traits::input_parameter< Mean >::type y_scale_baseline(y_scale_baselineSEXP);
    Rcpp::traits::input_parameter< std::vector<std::ptrdiff_t> >::type curve_index_choices(curve_index_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Time> >::type peak_time_choices(peak_time_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Time> >::type x_shift_choices(x_shift_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Time> >::type x_scale_choices(x_scale_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<SD> >::type sd_choices(sd_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Rp> >::type sd_scale_choices(sd_scale_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Mean> >::type peak_height_choices(peak_height_choicesSEXP);
    Rcpp::traits::input_parameter< std::vector<Rp> >::type y_scale_choices(y_scale_choicesSEXP);
    Rcpp::traits::input_parameter< Time >::type bias_peaktime_mean(bias_peaktime_meanSEXP);
    Rcpp::traits::input_parameter< Time >::type bias_peaktime_sd(bias_peaktime_sdSEXP);
    Rcpp::traits::input_parameter< Rp >::type bias_peaktime_shrinkage(bias_peaktime_shrinkageSEXP);
    Rcpp::traits::input_parameter< Mean >::type bias_peakheight_mean(bias_peakheight_meanSEXP);
    Rcpp::traits::input_parameter< SD >::type bias_peakheight_sd(bias_peakheight_sdSEXP);
    Rcpp::traits::input_parameter< Rp >::type bias_peakheight_shrinkage(bias_peakheight_shrinkageSEXP);
    rcpp_result_gen = Rcpp::wrap(ZipProductCurvesAndLogWeightsp(output_times, new_dat_df, dat_rcpp, observed_past_shrinkage_map_df, reasonable_future_shrinkage_map_df, n_future_neighbors, fit_obj_rcpp, y_scale_baseline, curve_index_choices, peak_time_choices, x_shift_choices, x_scale_choices, sd_choices, sd_scale_choices, peak_height_choices, y_scale_choices, bias_peaktime_mean, bias_peaktime_sd, bias_peaktime_shrinkage, bias_peakheight_mean, bias_peakheight_sd, bias_peakheight_shrinkage));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_epiforecast_cpp14funs_CartesianProductCurves", (DL_FUNC) &_epiforecast_cpp14funs_CartesianProductCurves, 10},
    {"_epiforecast_cpp14funs_CartesianProductLogWeights", (DL_FUNC) &_epiforecast_cpp14funs_CartesianProductLogWeights, 21},
    {"_epiforecast_cpp14funs_ZipProductCurvesAndLogWeightsp", (DL_FUNC) &_epiforecast_cpp14funs_ZipProductCurvesAndLogWeightsp, 22},
    {NULL, NULL, 0}
};

RcppExport void R_init_epiforecast_cpp14funs(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
